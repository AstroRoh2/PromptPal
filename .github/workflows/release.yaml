name: Build and Release

on:
  push:
    branches:
      - master

permissions:
  contents: write # to create release commit (google-github-actions/release-please-action)
  pull-requests: write # to create release PR (google-github-actions/release-please-action)

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: google-github-actions/release-please-action@v3
      id: release
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        release-type: go
    - uses: actions/checkout@v3
    - name: Set up Go 1.20
      uses: actions/setup-go@v3
      with:
        go-version: ^1.20
        cache: true
      id: go
    - name: setup env
      run: |
        echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      shell: bash
    - name: Generate
      run: |
        echo "GH_TAG=$(echo $GITHUB_REF | awk -F / '{print $3}')" >> $GITHUB_ENV
        go generate ./...

    - name: Build
      env:
        GOARCH: amd64
        CGO_ENABLED: 1
        GOOS: linux
      run: |
        make release
        chmod +x up-pp-api
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      if: ${{ steps.release.outputs.release_created }}
      with:
        images: annatarhe/prompt-pal
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      if: ${{ steps.release.outputs.release_created }}
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      if: ${{ steps.release.outputs.release_created }}
      with:
        context: .
        file: ./Dockerfile
        push: ${{ github.event_name != 'pull_request' && steps.release.outputs.release_created }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}